require 'rake'
require 'net/http'
require 'json'

def write_data_to_file(name, data)
  filename = "_data/#{name}.json"
  open(filename, "w") { |file| file.write(JSON.pretty_generate(data)) }
  if data.instance_of?(Array)
    datatype = 'Array'
  else
    datatype = data.keys.map(:to_s).join(", ")
  end
  puts "writing #{datatype} to #{filename}"
end

class Hash
  def except(*keys)
    dup.except!(*keys)
  end

  def except!(*keys)
    keys.each { |key| delete(key) }
    self
  end
end

module Enumerable
  def pluck(key)
    map {|obj| obj[key] }
  end
end


desc "fetch locations"
task :locations do
  Net::HTTP.start("gridspree.io") do |http|
    resp = http.get("/ss/xGmQC6u2zWpV7hWos38N9G")
    data_hash = JSON.parse(resp.body)

    regions = data_hash["rows"].pluck('region').reject { |c| c.empty? }
    cities = data_hash["rows"].pluck('city').reject { |c| c.empty? }

    write_data_to_file('locations', {regions: regions, cities: cities})
  end
end

desc "create product for lash kit"
task :lashkit do
  Net::HTTP.start("gridspree.io") do |http|
    resp = http.get("/ss/kMTtnkLcdPqBUu8oknDTSK")
    data_hash = JSON.parse(resp.body)
    data = data_hash["rows"].map do |p|
      if p["amazon"] && match = p["amazon"].match("([A-Z0-9]{10})")
        p["asin"] = match[0]
      end
      p
    end

    write_data_to_file('lashkit', data)
  end
end

desc "fetch prices"
task :services do
  services = []
  Net::HTTP.start("gridspree.io") do |http|
    resp = http.get("ss/3NSTm6bvRoHS4k76ZXqWv")
    data_hash = JSON.parse(resp.body)

    grouped = data_hash["rows"].group_by { |row| row["table"] }.values
    data = []
    grouped = grouped.map do |rows|
      table = {}

      rows.each_with_index do |row, index|
        if index == 0
          table["title"] = row["title"]
        else
          table["data"] ||= []
          table["data"] << row.except("table")
        end
      end

      data << table
    end

    write_data_to_file("services", data)
  end

end
