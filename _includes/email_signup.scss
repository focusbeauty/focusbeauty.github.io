@import "bootstrap4/variables";
@import "bootstrap4/mixins";
$btn-primary-bg: #605C50;
$btn-primary-border: lighten($btn-primary-bg, 15%);
$font-size-base: 16px;

.email-signup {
  width: 80%;
  max-width: 450px;
  margin: auto;

  input {
    height: 50px;
    -webkit-background-origin: border-box;
    background-origin: border-box;
    display: block;
    width: 100%;
  }

  @media (min-width: 48em) {
    input {
      float: left;
      width: 50%;
      display: inline-block;
    }
  }
}

.email-signup input[type="email"] {
  text-align: center;

  // // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  // height: $input-height;
  padding: $input-padding-y $input-padding-x;
  font-size: $font-size-base;
  line-height: $line-height;
  color: $input-color;
  background-color: $input-bg;
  // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214.
  background-image: none;
  border: $border-width solid $input-border;
   // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @include border-radius($input-border-radius);
  border-top-right-radius: 0px;
  border-bottom-right-radius: 0px;

  @include box-shadow($input-box-shadow);
  @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s);

  // Make inputs at least the height of their button counterpart (base line-height + padding + border).
  // Only apply the height to textual inputs and some selcts.
  // &:not(textarea),
  // &:not(select[size]),
  // &:not(select[multiple]) {
  //   height: $input-height;
  // }

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus();

  // Placeholder
  &::placeholder {
    color: $input-color-placeholder;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly],
  fieldset[disabled] & {
    background-color: $input-bg-disabled;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }
}

.btn, .email-signup input[type="submit"] {
  display: inline-block;
  font-weight: $btn-font-weight;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  user-select: none;
  border: $border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $font-size-base, $line-height, $btn-border-radius);
  @include transition(all .2s ease-in-out);

  &,
  &:active,
  &.active {
    &:focus,
    &.focus {
      @include tab-focus();
    }
  }

  @include hover-focus {
    text-decoration: none;
  }
  &.focus {
    text-decoration: none;
  }

  &:active,
  &.active {
    background-image: none;
    outline: 0;
    @include box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
  }

  &.disabled,
  &:disabled,
  fieldset[disabled] & {
    cursor: $cursor-disabled;
    opacity: .65;
    @include box-shadow(none);
  }
  @include button-variant($btn-primary-color, $btn-primary-bg, $btn-primary-border);
}

.email-signup input[type="submit"] {
  border-top-left-radius: 0px;
  border-bottom-left-radius: 0px;
}
